apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka1
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka1
  template:
    metadata:
      labels:
        app: kafka1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["kafka1", "kafka2", "kafka3"]
                topologyKey: kubernetes.io/hostname
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            [
              "sh",
              "-c",
              "rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data",
            ]
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          securityContext:
            runAsUser: 0
      containers:
        - name: kafka1
          image: confluentinc/cp-kafka:7.6.0
          ports:
            - containerPort: 9092
            - containerPort: 29092
          envFrom:
            - configMapRef:
                name: kafka-config
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka1:29092,EXTERNAL://kafka1:9092"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka1-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka2
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka2
  template:
    metadata:
      labels:
        app: kafka2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["kafka1", "kafka2", "kafka3"]
                topologyKey: kubernetes.io/hostname
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            [
              "sh",
              "-c",
              "rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data",
            ]
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          securityContext:
            runAsUser: 0
      containers:
        - name: kafka2
          image: confluentinc/cp-kafka:7.6.0
          ports:
            - containerPort: 9093
            - containerPort: 29093
          envFrom:
            - configMapRef:
                name: kafka-config
          env:
            - name: KAFKA_BROKER_ID
              value: "2"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka2:29093,EXTERNAL://kafka2:9093"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka2-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka3
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka3
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values: ["kafka1", "kafka2", "kafka3"]
                topologyKey: kubernetes.io/hostname
      initContainers:
        - name: fix-permissions
          image: busybox
          command:
            [
              "sh",
              "-c",
              "rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data",
            ]
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          securityContext:
            runAsUser: 0
      containers:
        - name: kafka3
          image: confluentinc/cp-kafka:7.6.0
          ports:
            - containerPort: 9094
            - containerPort: 29094
          envFrom:
            - configMapRef:
                name: kafka-config
          env:
            - name: KAFKA_BROKER_ID
              value: "3"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INTERNAL://kafka3:29094,EXTERNAL://kafka3:9094"
            - name: KAFKA_LISTENERS
              value: "INTERNAL://0.0.0.0:29094,EXTERNAL://0.0.0.0:9094"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka/data
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka3-pvc

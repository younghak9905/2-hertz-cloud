apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.global.namespace }}
  annotations:
    reloader.stakater.com/auto: "true"
    argocd.argoproj.io/sync-wave: "2"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
      annotations:
        signoz.io/scrape: "true"
        signoz.io/port: "8000"
        signoz.io/path: "/metrics"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.ecrAccess }}

      initContainers:
        - name: download-otel-agent
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              curl -L -o /otel/opentelemetry-javaagent.jar https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar
          volumeMounts:
            - name: otel-agent
              mountPath: /otel

      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          envFrom:
            - secretRef:
                name: springboot-secrets
          env:
            - name: OTEL_SERVICE_NAME
              value: "{{ .Values.app.name }}"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "{{ .Values.observability.signoz.endpoint }}"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "grpc"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: "service.name={{ .Values.app.name }},service.version={{ .Values.image.tag }},host.name={{ .Values.app.name }},os.type=linux"
            - name: LOGGING_LEVEL_ROOT
              value: "INFO"
            - name: LOGGING_PATTERN_CONSOLE
              value: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/otel/opentelemetry-javaagent.jar"
          volumeMounts:
            - name: otel-agent
              mountPath: /otel
          ports:
            - containerPort: {{ .Values.app.ports.http }}
            - containerPort: {{ .Values.app.ports.websocket }}
          readinessProbe:
            httpGet:
              path: /api/ping
              port: {{ .Values.app.ports.http }}
            initialDelaySeconds: {{ .Values.healthCheck.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.readiness.failureThreshold }}
            successThreshold: {{ .Values.healthCheck.readiness.successThreshold }}
          livenessProbe:
            httpGet:
              path: /api/ping
              port: {{ .Values.app.ports.http }}
            initialDelaySeconds: {{ .Values.healthCheck.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.healthCheck.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.healthCheck.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.healthCheck.liveness.failureThreshold }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}

      volumes:
        - name: otel-agent
          emptyDir: {}
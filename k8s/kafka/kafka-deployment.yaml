# kafka-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: hertz-tuning-dev
data:
  ZOOKEEPER_CLIENT_PORT: "2181"
  ZOOKEEPER_TICK_TIME: "2000"
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
  KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "3"
---
# kafka-cluster.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: confluentinc/cp-zookeeper:7.6.0
        ports:
        - containerPort: 2181
        envFrom:
        - configMapRef:
            name: kafka-config
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: hertz-tuning-dev
spec:
  selector:
    app: zookeeper
  ports:
  - port: 2181
    targetPort: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka1
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka1
  template:
    metadata:
      labels:
        app: kafka1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["kafka1", "kafka2", "kafka3"]
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data']
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        securityContext:
          runAsUser: 0
      containers:
      - name: kafka1
        image: confluentinc/cp-kafka:7.6.0
        ports:
        - containerPort: 9092
        - containerPort: 29092
        envFrom:
        - configMapRef:
            name: kafka-config
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka1:29092,EXTERNAL://kafka1:9092"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka1-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka1
  namespace: hertz-tuning-dev
spec:
  selector:
    app: kafka1
  ports:
  - name: external
    port: 9092
    targetPort: 9092
  - name: internal
    port: 29092
    targetPort: 29092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka2
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka2
  template:
    metadata:
      labels:
        app: kafka2
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["kafka1", "kafka2", "kafka3"]
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data']
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        securityContext:
          runAsUser: 0
      containers:
      - name: kafka2
        image: confluentinc/cp-kafka:7.6.0
        ports:
        - containerPort: 9093
        - containerPort: 29093
        envFrom:
        - configMapRef:
            name: kafka-config
        env:
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka2:29093,EXTERNAL://kafka2:9093"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://0.0.0.0:29093,EXTERNAL://0.0.0.0:9093"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka2-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka2
  namespace: hertz-tuning-dev
spec:
  selector:
    app: kafka2
  ports:
  - name: external
    port: 9093
    targetPort: 9093
  - name: internal
    port: 29093
    targetPort: 29093
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka3
  namespace: hertz-tuning-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka3
  template:
    metadata:
      labels:
        app: kafka3
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["kafka1", "kafka2", "kafka3"]
              topologyKey: kubernetes.io/hostname
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ['sh', '-c', 'rm -rf /var/lib/kafka/data/lost+found && chown -R 1000:1000 /var/lib/kafka/data']
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        securityContext:
          runAsUser: 0
      containers:
      - name: kafka3
        image: confluentinc/cp-kafka:7.6.0
        ports:
        - containerPort: 9094
        - containerPort: 29094
        envFrom:
        - configMapRef:
            name: kafka-config
        env:
        - name: KAFKA_BROKER_ID
          value: "3"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "INTERNAL://kafka3:29094,EXTERNAL://kafka3:9094"
        - name: KAFKA_LISTENERS
          value: "INTERNAL://0.0.0.0:29094,EXTERNAL://0.0.0.0:9094"
        volumeMounts:
        - name: kafka-data
          mountPath: /var/lib/kafka/data
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1
            memory: 2Gi
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka3-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka3
  namespace: hertz-tuning-dev
spec:
  selector:
    app: kafka3
  ports:
  - name: external
    port: 9094
    targetPort: 9094
  - name: internal
    port: 29094
    targetPort: 29094